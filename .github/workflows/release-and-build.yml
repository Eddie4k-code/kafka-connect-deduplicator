name: Build, Tag, and Release Maven Project

on:
  push:
    branches:
      - master  # Trigger workflow on pushes to the `main` branch
    # or use 'pull_request' if you want to create tags on PR merges


permissions:
  contents: write 
  issues: write    
  pull-requests: write  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Navigate to the project directory
      run: cd duplicate-message-detector-kafka-connect-custom-smt

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('duplicate-message-detector-kafka-connect-custom-smt/**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: |
        cd duplicate-message-detector-kafka-connect-custom-smt
        mvn clean package
    - name: Archive JAR as artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-app-artifact
        path: duplicate-message-detector-kafka-connect-custom-smt/target/*.jar

  create_new_tag:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get latest tag
      uses: rexdefuror/get-latest-tag@v1.0.1
      with:
          repo: ${{ github.repository }}
          releaseOnly: false 


    - name: Get the latest tag
      id: get_tag
      run: |
        latest_tag=$latest_tag
        echo "Latest tag: $latest_tag"
        # Increment the tag version (patch version here)
        version_parts=(${latest_tag//./ })
        patch_version=${version_parts[2]}
        new_patch_version=$((patch_version + 1))
        new_tag="v${version_parts[0]}.${version_parts[1]}.$new_patch_version"
        echo "New tag: $new_tag"
        echo "new_tag=$new_tag" >> $GITHUB_ENV

 

    - name: Create and push new tag
      run: |
        # Navigate to the directory
        cd duplicate-message-detector-kafka-connect-custom-smt

        # Create the new tag
        git tag {{ env.new_tag }}
        # Push the tag to the remote repository
        git push origin {{ env.new_tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: create_new_tag
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: {{ env.new_tag }}
        files: duplicate-message-detector-kafka-connect-custom-smt/target/*.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
